name: github-actions
on:
  push:
    branches:
      - master
jobs:
  check-pep8-compliance:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pycodestyle
      - name: Validate PEP8 compliance
        run: pycodestyle papermerge/
  unittests:
    needs: check-pep8-compliance
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install django==3.1.7
          pip install stapler
          pip install -r requirements/base.txt
          sudo apt-get update -qq
          sudo apt-get install poppler-utils imagemagick tesseract-ocr
      - name: Run unittests
        run: |
          touch papermerge.conf.py
          echo "BINARY_STAPLER = '$(which stapler)'" > papermerge.conf.py
          ./run_tests.sh
  build-and-push-app-docker-image:
    if: startsWith(github.ref, 'refs/tags')
    needs: unittests
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/app.dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prepare.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
  build-and-push-worker-docker-image:
    if: startsWith(github.ref, 'refs/tags')
    needs: unittests
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/worker.dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prepare.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
